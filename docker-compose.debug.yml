version: '3.4'

services:
  ikcikc:
    image: ikcikc
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    entrypoint: /bin/bash
    command: -c "pip install debugpy -t /tmp && python /tmp/debugpy --wait-for-client --listen 0.0.0.0:5678 src/manage.py runserver 0.0.0.0:8000"
    # command: -c "src/manage.py runserver 0.0.0.0:8000"
    ports:
      - 8000:8000
      - 5678:5678
    env_file:
      - ./.env
    depends_on:
      - db
    volumes:
      - "./backend/:/usr/src/"
      - "./public/:/usr/public/"
      - "./static/:/usr/static/"
    environment:
      - SQL_USER=${SQL_USER}
      - SQL_PASSWORD=${SQL_PASSWORD}
      - SQL_DATABASE=${SQL_DATABASE}
      - SECRET_KEY=${SECRET_KEY}
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      - SQL_ENGINE=${SQL_ENGINE}
      - SQL_HOST=${SQL_HOST}
      - SQL_PORT=${SQL_PORT}
  db:
    image: postgres:12-alpine
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${SQL_USER}
      - POSTGRES_PASSWORD=${SQL_PASSWORD}
      - POSTGRES_DB=${SQL_DATABASE}
    ports:
      - target: 5432
        published: ${SQL_PORT}
  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
volumes:
  postgres_data:
  src:
  